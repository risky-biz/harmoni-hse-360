# Build stage
FROM mcr.microsoft.com/dotnet/sdk:8.0-alpine AS build
WORKDIR /src

# Install Node.js for React build
RUN apk add --no-cache nodejs npm

# Copy csproj files and restore
COPY ["src/Harmoni360.Web/Harmoni360.Web.csproj", "Harmoni360.Web/"]
COPY ["src/Harmoni360.Application/Harmoni360.Application.csproj", "Harmoni360.Application/"]
COPY ["src/Harmoni360.Domain/Harmoni360.Domain.csproj", "Harmoni360.Domain/"]
COPY ["src/Harmoni360.Infrastructure/Harmoni360.Infrastructure.csproj", "Harmoni360.Infrastructure/"]
COPY ["src/Harmoni360.ElsaStudio/Harmoni360.ElsaStudio.csproj", "Harmoni360.ElsaStudio/"]
RUN dotnet restore "Harmoni360.Web/Harmoni360.Web.csproj"
RUN dotnet restore "Harmoni360.ElsaStudio/Harmoni360.ElsaStudio.csproj"

# Copy everything else
COPY src/ .

# Build React app
WORKDIR /src/Harmoni360.Web/ClientApp
RUN npm ci --legacy-peer-deps
RUN npm run build

# Build Elsa Studio
WORKDIR /src/Harmoni360.ElsaStudio
RUN dotnet publish "Harmoni360.ElsaStudio.csproj" -c Release -o /app/elsa-publish

# Build .NET app
WORKDIR /src/Harmoni360.Web
RUN dotnet publish "Harmoni360.Web.csproj" -c Release -o /app/publish /p:UseAppHost=false /p:SkipClientBuild=true

# Copy Elsa Studio files to wwwroot
RUN mkdir -p /app/publish/wwwroot/elsa-studio && \
    cp -r /app/elsa-publish/wwwroot/* /app/publish/wwwroot/elsa-studio/ && \
    # Ensure favicon.png is explicitly copied
    if [ -f /src/Harmoni360.ElsaStudio/wwwroot/favicon.png ]; then \
        cp /src/Harmoni360.ElsaStudio/wwwroot/favicon.png /app/publish/wwwroot/elsa-studio/favicon.png; \
    fi && \
    # List files to verify copy
    ls -la /app/publish/wwwroot/elsa-studio/

# Runtime stage
FROM mcr.microsoft.com/dotnet/aspnet:9.0-alpine AS final
WORKDIR /app

# Install cultures for globalization
RUN apk add --no-cache icu-libs
ENV DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=false

# Create non-root user
RUN addgroup -S appgroup && adduser -S appuser -G appgroup

# Copy published files
COPY --from=build /app/publish .

# Create uploads and App_Data directories with proper permissions
RUN mkdir -p uploads App_Data && chown -R appuser:appgroup uploads App_Data

# Set user
USER appuser

EXPOSE 8080
ENV ASPNETCORE_URLS=http://+:8080
ENTRYPOINT ["dotnet", "Harmoni360.Web.dll"]
